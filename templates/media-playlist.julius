$(function(){

if (window.playlist) {
  alert("a playlist is already active!");
  throw "Playlist is already initialized (window.playlist is set)";
}

window.playlist = { data : {} };

var pl = playlist,
    cont = $("##{rawJS content}"),
    head = $("##{rawJS heading}");
/**
 * Loads active playlist, or creates a new playlist.
 */
pl.load_playlist = function() {
  $.ajax(
    { url: '@{PlaylistR "select"}'
    , type: 'POST'
    , dataType: 'json'
    , success: function(x) { pl.data = (x[0] == 0) ? x[1] : {} }
    , error: function() { pl.data = {}; alert("playlist loading failed!") }
    , complete: pl.update_playlist
    }
  );
}

/**
 * add `what' from `area' to the playlist
 */
pl.to_playlist = function(area, what) {
  $.post('@{PlaylistR "insert"}', JSON.stringify([area, what]), function(data) {
    if (data[0] == 0) {
      pl.data = data[1];
      pl.update_playlist();
    } else {
      alert("could not add to playlist: " + what + "\n\nresult: " + data);
    }
  });
}

/**
 * redraw playlist and add default title if none is specified.
 */
pl.update_playlist = function() {
  cont.empty();
  head.empty();
  if (pl.data["title"]) {
    head.text(pl.data["title"]);
  } else {
    head.append( $('<i/>').text("default") );
  }

  var table = $('<table/>', { class : 'browser playlist' });
  table.append($('<tr/>')
    .append($('<th/>').text("Filename"))
    .append($('<th/>').text("Area"))
    .append($('<th/>').text(""))
  );
  if (pl.data.hasOwnProperty("elems")) {
    $.each(pl.data["elems"], function(index, value){
      table.append($('<tr/>')
        .append($('<td title="'+value[1]+'"/>').text(value[1]))
        .append($('<td/>').text(value[0]))
      )
    });
    cont.append(table);
  } else {
    cont.append($("</i>").text("Something went wrong while loading the playlist."));
  }
}

/**
 * save playlist. title is optional and default is used if == null
 */
pl.save_playlist_custom = function(title) {
  
}

/**
 * clear every element from the playlist.
 */
pl.clear_playlist = function() {
  $.post('@{PlaylistR "delete"}', JSON.stringify([]), function(data) {
    if (data[0] == 0) { pl.data = data[1]; pl.update_playlist(); }
    else { alert("could not clear the playlist: " + data[1]); }
  });
}

cont.ready(pl.load_playlist);
})
